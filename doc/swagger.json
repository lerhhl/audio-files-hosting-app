{
  "openapi": "3.0.0",
  "info": {
    "title": "Audio Files Hosting API Specs",
    "version": "1.0"
  },
  "paths": {
    "/api/audio-files/{fileId}": {
      "get": {
        "summary": "Get an audio file by ID",
        "description": "Retrieve an audio file by its ID. Supports range requests for partial file downloads.",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "required": true,
            "description": "The ID of the audio file to retrieve.",
            "schema": {
              "type": "integer",
              "example": 123
            }
          },
          {
            "name": "range",
            "in": "header",
            "required": false,
            "description": "The range of bytes to retrieve (for partial downloads).",
            "schema": {
              "type": "string",
              "example": "bytes=0-1023"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the full audio file.",
            "headers": {
              "Content-Length": {
                "description": "The size of the file in bytes.",
                "schema": {
                  "type": "integer"
                }
              },
              "Content-Type": {
                "description": "The MIME type of the file.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "206": {
            "description": "Returns a partial audio file (range request).",
            "headers": {
              "Content-Range": {
                "description": "The range of bytes returned.",
                "schema": {
                  "type": "string",
                  "example": "bytes 0-1023/2048"
                }
              },
              "Content-Length": {
                "description": "The size of the returned chunk in bytes.",
                "schema": {
                  "type": "integer"
                }
              },
              "Content-Type": {
                "description": "The MIME type of the file.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request (e.g., invalid file ID or range).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid File ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., session expired).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (e.g., user does not own the file).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Forbidden to retrieve the file"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "File not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "File not found"
                    }
                  }
                }
              }
            }
          },
          "416": {
            "description": "Range not satisfiable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Range Not Satisfiable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/audio-files": {
      "get": {
        "summary": "Get a list of audio files",
        "description": "Retrieve a list of audio files for the authenticated user.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number to retrieve.",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "The number of audio files to retrieve per page.",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of audio files.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "example": "Sample audio file"
                          },
                          "category": {
                            "type": "string",
                            "example": "music"
                          },
                          "mimeType": {
                            "type": "string",
                            "example": "audio/mp3"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-01T12:00:00Z"
                          }
                        },
                        "required": [
                          "id",
                          "description",
                          "category",
                          "mimeType",
                          "createdAt"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "example": 100
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Failed to fetch audio files.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to fetch audio files"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session expired"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Upload a new audio file",
        "description": "Upload a new audio file for the authenticated user.",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description of the audio file.",
                    "example": "Sample audio file"
                  },
                  "category": {
                    "type": "string",
                    "description": "The category of the audio file.",
                    "example": "music"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The audio file to upload."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Audio file uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Audio file uploaded successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to upload audio file.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "server": {
                          "type": "string",
                          "example": "Failed to upload audio file"
                        },
                        "description": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Description must be at least 3 characters long."
                          }
                        },
                        "file": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "File type must be specified."
                          }
                        },
                        "category": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Category must be one of the categories in the dropdown."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "server": {
                          "type": "string",
                          "example": "Session expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/login": {
      "post": {
        "summary": "User login",
        "description": "Create a new session for the user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "testuser"
                  },
                  "password": {
                    "type": "string",
                    "example": "testpassword"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Login successful"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid username or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid username or password"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/logout": {
      "post": {
        "summary": "User logout",
        "description": "Delete a user session",
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Logout successful"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userId}": {
      "delete": {
        "summary": "Delete a user by ID",
        "description": "Deletes a user by their ID. Only admin users are allowed to perform this action.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user to delete.",
            "schema": {
              "type": "integer",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User 123 deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or user does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User does not exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., session expired).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (e.g., user is not an admin).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Forbidden to delete user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "description": "Update a user's username or password by their ID. Only admin users are allowed to perform this action.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "The ID of the user to update.",
            "schema": {
              "type": "integer",
              "example": 123
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The new username for the user.",
                    "example": "johndoe"
                  },
                  "currentPassword": {
                    "type": "string",
                    "description": "The current password of the user (required if updating the password).",
                    "example": "oldpassword123"
                  },
                  "newPassword": {
                    "type": "string",
                    "description": "The new password for the user.",
                    "example": "newsecurepassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Username already exists"
                          }
                        },
                        "currentPassword": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Current password is incorrect"
                          }
                        },
                        "newPassword": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "New password must be between 3 and 20 characters long."
                          }
                        },
                        "server": {
                          "type": "string",
                          "example": "Failed to update user"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., session expired).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (e.g., user is not an admin).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Forbidden to update user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get a list of users",
        "description": "Get a list of users",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "The page number to retrieve",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "The number of users to retrieve per page",
            "schema": {
              "type": "integer",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-01T12:00:00Z"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2023-10-01T12:00:00Z"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "createdAt",
                          "updatedAt"
                        ]
                      }
                    },
                    "totalCount": {
                      "type": "integer",
                      "example": 100
                    }
                  },
                  "required": [
                    "items",
                    "totalCount"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to get users"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., session expired).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Session expired"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (e.g., user is not an admin).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Forbidden to get users"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Create a new user with a unique username and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "The username for the new user.",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the new user.",
                    "example": "securepassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "johndoe"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-10-01T12:00:00Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2023-10-01T12:00:00Z"
                        }
                      },
                      "required": [
                        "id",
                        "username",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  },
                  "required": [
                    "message",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Failed to create user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Username already exists"
                          }
                        },
                        "password": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Password must be at least 3 characters long"
                          }
                        },
                        "server": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Failed to create user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (e.g., session expired).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "server": {
                          "type": "string",
                          "example": "Session expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden (e.g., user is not an admin).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "server": {
                          "type": "string",
                          "example": "Forbidden to create new user"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    "Audio Files"
  ]
}